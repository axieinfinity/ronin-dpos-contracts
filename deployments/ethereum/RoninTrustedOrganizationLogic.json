{
  "address": "0x9Be8BB3C6ced4C0C51b1C943Dee26a593b1E6794",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousDenominator",
          "type": "uint256"
        }
      ],
      "name": "ThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "orgs",
          "type": "tuple[]"
        }
      ],
      "name": "TrustedOrganizationsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "orgs",
          "type": "address[]"
        }
      ],
      "name": "TrustedOrganizationsRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "orgs",
          "type": "tuple[]"
        }
      ],
      "name": "TrustedOrganizationsUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_list",
          "type": "tuple[]"
        }
      ],
      "name": "addTrustedOrganizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voteWeight",
          "type": "uint256"
        }
      ],
      "name": "checkThreshold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countTrustedOrganizations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTrustedOrganizations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_list",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getBridgeVoterWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "getBridgeVoterWeights",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_res",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_consensusAddr",
          "type": "address"
        }
      ],
      "name": "getConsensusWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "getConsensusWeights",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_res",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "getGovernorWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "getGovernorWeights",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_res",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "num_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denom_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_consensusAddr",
          "type": "address"
        }
      ],
      "name": "getTrustedOrganization",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "getTrustedOrganizationAt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_trustedOrgs",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "__num",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "__denom",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVoteWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "removeTrustedOrganizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "sumBridgeVoterWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "sumConsensusWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "sumGovernorWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_list",
          "type": "tuple[]"
        }
      ],
      "name": "updateTrustedOrganizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x399ee8391a34228f0a0fe88522bfe32c57de198039733cf0acc0b1af5f9b459a",
  "receipt": {
    "to": null,
    "from": "0x0F68eDBE14C8f68481771016d7E2871d6a35DE11",
    "contractAddress": "0x9Be8BB3C6ced4C0C51b1C943Dee26a593b1E6794",
    "transactionIndex": 86,
    "gasUsed": "2119207",
    "logsBloom": "0x
    "blockHash": "0xa3614f730cdc306fda1510837a75cd4a0c265751cf37d1606bc55a72ba3c8899",
    "transactionHash": "0x399ee8391a34228f0a0fe88522bfe32c57de198039733cf0acc0b1af5f9b459a",
    "logs": [],
    "blockNumber": 16895392,
    "cumulativeGasUsed": "9762345",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a50a3f056fa24c0b5a230a9cb29a1cb4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousDenominator\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"orgs\",\"type\":\"tuple[]\"}],\"name\":\"TrustedOrganizationsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"orgs\",\"type\":\"address[]\"}],\"name\":\"TrustedOrganizationsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"orgs\",\"type\":\"tuple[]\"}],\"name\":\"TrustedOrganizationsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_list\",\"type\":\"tuple[]\"}],\"name\":\"addTrustedOrganizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_voteWeight\",\"type\":\"uint256\"}],\"name\":\"checkThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countTrustedOrganizations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTrustedOrganizations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getBridgeVoterWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"getBridgeVoterWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"getConsensusWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"getConsensusWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"getGovernorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"getGovernorWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"num_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denom_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"getTrustedOrganization\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"getTrustedOrganizationAt\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_trustedOrgs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"__num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__denom\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVoteWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"removeTrustedOrganizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"sumBridgeVoterWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"sumConsensusWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"sumGovernorWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_list\",\"type\":\"tuple[]\"}],\"name\":\"updateTrustedOrganizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedOrganizations((address,address,address,uint256,uint256)[])\":{\"details\":\"Adds a list of addresses into the trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. - The field `addedBlock` should be blank. Emits the event `TrustedOrganizationAdded` once an organization is added.\"},\"checkThreshold(uint256)\":{\"details\":\"Checks whether the `_voteWeight` passes the threshold.\"},\"countTrustedOrganizations()\":{\"details\":\"Returns the number of trusted organizations.\"},\"getAllTrustedOrganizations()\":{\"details\":\"Returns all of the trusted organizations.\"},\"getBridgeVoterWeight(address)\":{\"details\":\"Returns the weight of a bridge voter.\"},\"getBridgeVoterWeights(address[])\":{\"details\":\"Returns the weights of a list of bridge voter addresses.\"},\"getConsensusWeight(address)\":{\"details\":\"Returns the weight of a consensus.\"},\"getConsensusWeights(address[])\":{\"details\":\"Returns the weights of a list of consensus addresses.\"},\"getGovernorWeight(address)\":{\"details\":\"Returns the weight of a governor.\"},\"getGovernorWeights(address[])\":{\"details\":\"Returns the weights of a list of governor addresses.\"},\"getThreshold()\":{\"details\":\"Returns the threshold.\"},\"getTrustedOrganization(address)\":{\"details\":\"Returns the trusted organization by consensus address. Reverts once the consensus address is non-existent.\"},\"getTrustedOrganizationAt(uint256)\":{\"details\":\"Returns the trusted organization at `_index`.\"},\"initialize((address,address,address,uint256,uint256)[],uint256,uint256)\":{\"details\":\"Initializes the contract storage.\"},\"minimumVoteWeight()\":{\"details\":\"Returns the minimum vote weight to pass the threshold.\"},\"removeTrustedOrganizations(address[])\":{\"details\":\"Removes a list of addresses from the trusted organization. Requirements: - The method caller is admin. Emits the event `TrustedOrganizationRemoved` once an organization is removed.\",\"params\":{\"_consensusAddrs\":\"The list of consensus addresses linked to corresponding trusted organization that to be removed.\"}},\"setThreshold(uint256,uint256)\":{\"details\":\"Sets the threshold. Requirements: - The method caller is admin. Emits the `ThresholdUpdated` event.\"},\"sumBridgeVoterWeights(address[])\":{\"details\":\"Returns total weights of the bridge voter list.\"},\"sumConsensusWeights(address[])\":{\"details\":\"Returns total weights of the consensus list.\"},\"sumGovernorWeights(address[])\":{\"details\":\"Returns total weights of the governor list.\"},\"totalWeights()\":{\"details\":\"Returns total weights.\"},\"updateTrustedOrganizations((address,address,address,uint256,uint256)[])\":{\"details\":\"Updates weights for a list of existent trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. Emits the `TrustedOrganizationUpdated` event.\"}},\"stateVariables\":{\"_addedBlock\":{\"details\":\"Mapping from consensus address => added block\"},\"_bridgeVoterList\":{\"details\":\"Bridge voters array\"},\"_bridgeVoterWeight\":{\"details\":\"Mapping from bridge voter address => weight\"},\"_consensusList\":{\"details\":\"Consensus array\"},\"_consensusWeight\":{\"details\":\"Mapping from consensus address => weight\"},\"_governorList\":{\"details\":\"Governors array\"},\"_governorWeight\":{\"details\":\"Mapping from governor address => weight\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/multi-chains/RoninTrustedOrganization.sol\":\"RoninTrustedOrganization\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/extensions/collections/HasProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\nabstract contract HasProxyAdmin {\\n  // bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  modifier onlyAdmin() {\\n    require(msg.sender == _getAdmin(), \\\"HasProxyAdmin: unauthorized sender\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @dev Returns proxy admin.\\n   */\\n  function _getAdmin() internal view returns (address) {\\n    return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n  }\\n}\\n\",\"keccak256\":\"0x0c2fcf25290180e8cd733691b113464cdde671dc019e6c343e9eb3e16c6ca24a\",\"license\":\"MIT\"},\"contracts/interfaces/IQuorum.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IQuorum {\\n  /// @dev Emitted when the threshold is updated\\n  event ThresholdUpdated(\\n    uint256 indexed nonce,\\n    uint256 indexed numerator,\\n    uint256 indexed denominator,\\n    uint256 previousNumerator,\\n    uint256 previousDenominator\\n  );\\n\\n  /**\\n   * @dev Returns the threshold.\\n   */\\n  function getThreshold() external view returns (uint256 _num, uint256 _denom);\\n\\n  /**\\n   * @dev Checks whether the `_voteWeight` passes the threshold.\\n   */\\n  function checkThreshold(uint256 _voteWeight) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the minimum vote weight to pass the threshold.\\n   */\\n  function minimumVoteWeight() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the threshold.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits the `ThresholdUpdated` event.\\n   *\\n   */\\n  function setThreshold(uint256 _numerator, uint256 _denominator)\\n    external\\n    returns (uint256 _previousNum, uint256 _previousDenom);\\n}\\n\",\"keccak256\":\"0x10f3b360430e6d03773c9959f54cbed6fb0346069645c05b05ef50cfb19f3753\",\"license\":\"MIT\"},\"contracts/interfaces/IRoninTrustedOrganization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./IQuorum.sol\\\";\\n\\ninterface IRoninTrustedOrganization is IQuorum {\\n  struct TrustedOrganization {\\n    // Address of the validator that produces block, e.g. block.coinbase. This is so-called validator address.\\n    address consensusAddr;\\n    // Address to voting proposal\\n    address governor;\\n    // Address to voting bridge operators\\n    address bridgeVoter;\\n    // Its Weight\\n    uint256 weight;\\n    // The block that the organization was added\\n    uint256 addedBlock;\\n  }\\n\\n  /// @dev Emitted when the trusted organization is added.\\n  event TrustedOrganizationsAdded(TrustedOrganization[] orgs);\\n  /// @dev Emitted when the trusted organization is updated.\\n  event TrustedOrganizationsUpdated(TrustedOrganization[] orgs);\\n  /// @dev Emitted when the trusted organization is removed.\\n  event TrustedOrganizationsRemoved(address[] orgs);\\n\\n  /**\\n   * @dev Adds a list of addresses into the trusted organization.\\n   *\\n   * Requirements:\\n   * - The weights should larger than 0.\\n   * - The method caller is admin.\\n   * - The field `addedBlock` should be blank.\\n   *\\n   * Emits the event `TrustedOrganizationAdded` once an organization is added.\\n   *\\n   */\\n  function addTrustedOrganizations(TrustedOrganization[] calldata) external;\\n\\n  /**\\n   * @dev Updates weights for a list of existent trusted organization.\\n   *\\n   * Requirements:\\n   * - The weights should larger than 0.\\n   * - The method caller is admin.\\n   *\\n   * Emits the `TrustedOrganizationUpdated` event.\\n   *\\n   */\\n  function updateTrustedOrganizations(TrustedOrganization[] calldata _list) external;\\n\\n  /**\\n   * @dev Removes a list of addresses from the trusted organization.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits the event `TrustedOrganizationRemoved` once an organization is removed.\\n   *\\n   * @param _consensusAddrs The list of consensus addresses linked to corresponding trusted organization that to be removed.\\n   */\\n  function removeTrustedOrganizations(address[] calldata _consensusAddrs) external;\\n\\n  /**\\n   * @dev Returns total weights.\\n   */\\n  function totalWeights() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weight of a consensus.\\n   */\\n  function getConsensusWeight(address _consensusAddr) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weight of a governor.\\n   */\\n  function getGovernorWeight(address _governor) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weight of a bridge voter.\\n   */\\n  function getBridgeVoterWeight(address _addr) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weights of a list of consensus addresses.\\n   */\\n  function getConsensusWeights(address[] calldata _list) external view returns (uint256[] memory);\\n\\n  /**\\n   * @dev Returns the weights of a list of governor addresses.\\n   */\\n  function getGovernorWeights(address[] calldata _list) external view returns (uint256[] memory);\\n\\n  /**\\n   * @dev Returns the weights of a list of bridge voter addresses.\\n   */\\n  function getBridgeVoterWeights(address[] calldata _list) external view returns (uint256[] memory);\\n\\n  /**\\n   * @dev Returns total weights of the consensus list.\\n   */\\n  function sumConsensusWeights(address[] calldata _list) external view returns (uint256 _res);\\n\\n  /**\\n   * @dev Returns total weights of the governor list.\\n   */\\n  function sumGovernorWeights(address[] calldata _list) external view returns (uint256 _res);\\n\\n  /**\\n   * @dev Returns total weights of the bridge voter list.\\n   */\\n  function sumBridgeVoterWeights(address[] calldata _list) external view returns (uint256 _res);\\n\\n  /**\\n   * @dev Returns the trusted organization at `_index`.\\n   */\\n  function getTrustedOrganizationAt(uint256 _index) external view returns (TrustedOrganization memory);\\n\\n  /**\\n   * @dev Returns the number of trusted organizations.\\n   */\\n  function countTrustedOrganizations() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns all of the trusted organizations.\\n   */\\n  function getAllTrustedOrganizations() external view returns (TrustedOrganization[] memory);\\n\\n  /**\\n   * @dev Returns the trusted organization by consensus address.\\n   *\\n   * Reverts once the consensus address is non-existent.\\n   */\\n  function getTrustedOrganization(address _consensusAddr) external view returns (TrustedOrganization memory);\\n}\\n\",\"keccak256\":\"0x1edb7a3f5d340e7efc141cb8d94c5499954dec869f026d3998ad92cbc714d604\",\"license\":\"MIT\"},\"contracts/libraries/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.0;\\n\\nlibrary AddressArrayUtils {\\n  /**\\n   * @dev Returns whether or not there's a duplicate. Runs in O(n^2).\\n   * @param A Array to search\\n   * @return Returns true if duplicate, false otherwise\\n   */\\n  function hasDuplicate(address[] memory A) internal pure returns (bool) {\\n    if (A.length == 0) {\\n      return false;\\n    }\\n    for (uint256 i = 0; i < A.length - 1; i++) {\\n      for (uint256 j = i + 1; j < A.length; j++) {\\n        if (A[i] == A[j]) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * @dev Returns whether two arrays of addresses are equal or not.\\n   */\\n  function isEqual(address[] memory _this, address[] memory _other) internal pure returns (bool) {\\n    bytes32 _thisHash;\\n    bytes32 _otherHash;\\n\\n    assembly {\\n      _thisHash := keccak256(add(_this, 32), mul(mload(_this), 32))\\n      _otherHash := keccak256(add(_other, 32), mul(mload(_other), 32))\\n    }\\n\\n    return _thisHash == _otherHash;\\n  }\\n}\\n\",\"keccak256\":\"0xea4ac2b0783926a0e6ae257bc069fa37ea864ce77bfb25dd327d4727a38ad0ea\",\"license\":\"UNLICENSED\"},\"contracts/multi-chains/RoninTrustedOrganization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"../libraries/AddressArrayUtils.sol\\\";\\nimport \\\"../interfaces/IRoninTrustedOrganization.sol\\\";\\nimport \\\"../extensions/collections/HasProxyAdmin.sol\\\";\\n\\ncontract RoninTrustedOrganization is IRoninTrustedOrganization, HasProxyAdmin, Initializable {\\n  uint256 internal _num;\\n  uint256 internal _denom;\\n  uint256 internal _totalWeight;\\n  uint256 internal _nonce;\\n\\n  /// @dev Mapping from consensus address => weight\\n  mapping(address => uint256) internal _consensusWeight;\\n  /// @dev Mapping from governor address => weight\\n  mapping(address => uint256) internal _governorWeight;\\n  /// @dev Mapping from bridge voter address => weight\\n  mapping(address => uint256) internal _bridgeVoterWeight;\\n\\n  /// @dev Mapping from consensus address => added block\\n  mapping(address => uint256) internal _addedBlock;\\n\\n  /// @dev Consensus array\\n  address[] internal _consensusList;\\n  /// @dev Governors array\\n  address[] internal _governorList;\\n  /// @dev Bridge voters array\\n  address[] internal _bridgeVoterList;\\n\\n  /**\\n   * @dev Initializes the contract storage.\\n   */\\n  function initialize(\\n    TrustedOrganization[] calldata _trustedOrgs,\\n    uint256 __num,\\n    uint256 __denom\\n  ) external initializer {\\n    if (_trustedOrgs.length > 0) {\\n      _addTrustedOrganizations(_trustedOrgs);\\n    }\\n    _setThreshold(__num, __denom);\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function getThreshold() external view virtual returns (uint256 num_, uint256 denom_) {\\n    return (_num, _denom);\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function checkThreshold(uint256 _voteWeight) external view virtual returns (bool) {\\n    return _voteWeight * _denom >= _num * _totalWeight;\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function minimumVoteWeight() external view virtual returns (uint256) {\\n    return (_num * _totalWeight + _denom - 1) / _denom;\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function setThreshold(uint256 _numerator, uint256 _denominator)\\n    external\\n    override\\n    onlyAdmin\\n    returns (uint256, uint256)\\n  {\\n    return _setThreshold(_numerator, _denominator);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function addTrustedOrganizations(TrustedOrganization[] calldata _list) external override onlyAdmin {\\n    _addTrustedOrganizations(_list);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function updateTrustedOrganizations(TrustedOrganization[] calldata _list) external override onlyAdmin {\\n    require(_list.length > 0, \\\"RoninTrustedOrganization: invalid array length\\\");\\n    for (uint256 _i; _i < _list.length; _i++) {\\n      _updateTrustedOrganization(_list[_i]);\\n    }\\n    emit TrustedOrganizationsUpdated(_list);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function removeTrustedOrganizations(address[] calldata _list) external override onlyAdmin {\\n    require(_list.length > 0, \\\"RoninTrustedOrganization: invalid array length\\\");\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _removeTrustedOrganization(_list[_i]);\\n    }\\n    emit TrustedOrganizationsRemoved(_list);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function totalWeights() external view virtual returns (uint256) {\\n    return _totalWeight;\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getConsensusWeight(address _consensusAddr) external view returns (uint256) {\\n    return _consensusWeight[_consensusAddr];\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getGovernorWeight(address _governor) external view returns (uint256) {\\n    return _governorWeight[_governor];\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getBridgeVoterWeight(address _addr) external view returns (uint256) {\\n    return _bridgeVoterWeight[_addr];\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getConsensusWeights(address[] calldata _list) external view returns (uint256[] memory _res) {\\n    _res = new uint256[](_list.length);\\n    for (uint _i = 0; _i < _res.length; _i++) {\\n      _res[_i] = _consensusWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getGovernorWeights(address[] calldata _list) external view returns (uint256[] memory _res) {\\n    _res = new uint256[](_list.length);\\n    for (uint _i = 0; _i < _res.length; _i++) {\\n      _res[_i] = _governorWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getBridgeVoterWeights(address[] calldata _list) external view returns (uint256[] memory _res) {\\n    _res = new uint256[](_list.length);\\n    for (uint _i = 0; _i < _res.length; _i++) {\\n      _res[_i] = _bridgeVoterWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function sumConsensusWeights(address[] calldata _list) external view returns (uint256 _res) {\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _res += _consensusWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function sumGovernorWeights(address[] calldata _list) external view returns (uint256 _res) {\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _res += _governorWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function sumBridgeVoterWeights(address[] calldata _list) external view returns (uint256 _res) {\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _res += _bridgeVoterWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function countTrustedOrganizations() external view override returns (uint256) {\\n    return _consensusList.length;\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getAllTrustedOrganizations() external view override returns (TrustedOrganization[] memory _list) {\\n    _list = new TrustedOrganization[](_consensusList.length);\\n    address _addr;\\n    for (uint256 _i; _i < _list.length; _i++) {\\n      _addr = _consensusList[_i];\\n      _list[_i].consensusAddr = _addr;\\n      _list[_i].governor = _governorList[_i];\\n      _list[_i].bridgeVoter = _bridgeVoterList[_i];\\n      _list[_i].weight = _consensusWeight[_addr];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getTrustedOrganization(address _consensusAddr) external view returns (TrustedOrganization memory) {\\n    for (uint _i = 0; _i < _consensusList.length; _i++) {\\n      if (_consensusList[_i] == _consensusAddr) {\\n        return getTrustedOrganizationAt(_i);\\n      }\\n    }\\n    revert(\\\"RoninTrustedOrganization: query for non-existent consensus address\\\");\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getTrustedOrganizationAt(uint256 _idx) public view override returns (TrustedOrganization memory) {\\n    address _addr = _consensusList[_idx];\\n    return\\n      TrustedOrganization(\\n        _addr,\\n        _governorList[_idx],\\n        _bridgeVoterList[_idx],\\n        _consensusWeight[_addr],\\n        _addedBlock[_addr]\\n      );\\n  }\\n\\n  /**\\n   * @dev Adds a list of trusted organizations.\\n   */\\n  function _addTrustedOrganizations(TrustedOrganization[] calldata _list) internal virtual {\\n    for (uint256 _i; _i < _list.length; _i++) {\\n      _addTrustedOrganization(_list[_i]);\\n    }\\n    emit TrustedOrganizationsAdded(_list);\\n  }\\n\\n  /**\\n   * @dev Adds a trusted organization.\\n   *\\n   * Requirements:\\n   * - The weight is larger than 0.\\n   * - The consensus address is not added.\\n   * - The govenor address is not added.\\n   * - The bridge voter address is not added.\\n   *\\n   */\\n  function _addTrustedOrganization(TrustedOrganization memory _v) internal virtual {\\n    require(_v.addedBlock == 0, \\\"RoninTrustedOrganization: invalid request\\\");\\n    _sanityCheckTrustedOrganizationData(_v);\\n\\n    if (_consensusWeight[_v.consensusAddr] > 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: consensus address \\\",\\n            Strings.toHexString(uint160(_v.consensusAddr), 20),\\n            \\\" is added already\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    if (_governorWeight[_v.governor] > 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: govenor address \\\",\\n            Strings.toHexString(uint160(_v.governor), 20),\\n            \\\" is added already\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    if (_bridgeVoterWeight[_v.bridgeVoter] > 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: bridge voter address \\\",\\n            Strings.toHexString(uint160(_v.bridgeVoter), 20),\\n            \\\" is added already\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    _consensusList.push(_v.consensusAddr);\\n    _consensusWeight[_v.consensusAddr] = _v.weight;\\n\\n    _governorList.push(_v.governor);\\n    _governorWeight[_v.governor] = _v.weight;\\n\\n    _bridgeVoterList.push(_v.bridgeVoter);\\n    _bridgeVoterWeight[_v.bridgeVoter] = _v.weight;\\n\\n    _addedBlock[_v.consensusAddr] = block.number;\\n\\n    _totalWeight += _v.weight;\\n  }\\n\\n  /**\\n   * @dev Updates a trusted organization.\\n   *\\n   * Requirements:\\n   * - The weight is larger than 0.\\n   * - The consensus address is already added.\\n   *\\n   */\\n  function _updateTrustedOrganization(TrustedOrganization memory _v) internal virtual {\\n    _sanityCheckTrustedOrganizationData(_v);\\n\\n    uint256 _weight = _consensusWeight[_v.consensusAddr];\\n    if (_weight == 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: consensus address \\\",\\n            Strings.toHexString(uint160(_v.consensusAddr), 20),\\n            \\\" is not added\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    uint256 _count = _consensusList.length;\\n    for (uint256 _i = 0; _i < _count; _i++) {\\n      if (_consensusList[_i] == _v.consensusAddr) {\\n        _totalWeight -= _weight;\\n        _totalWeight += _v.weight;\\n\\n        if (_governorList[_i] != _v.governor) {\\n          require(_governorWeight[_v.governor] == 0, \\\"RoninTrustedOrganization: query for duplicated governor\\\");\\n          delete _governorWeight[_governorList[_i]];\\n          _governorList[_i] = _v.governor;\\n        }\\n\\n        if (_bridgeVoterList[_i] != _v.bridgeVoter) {\\n          require(\\n            _bridgeVoterWeight[_v.bridgeVoter] == 0,\\n            \\\"RoninTrustedOrganization: query for duplicated bridge voter\\\"\\n          );\\n          delete _bridgeVoterWeight[_bridgeVoterList[_i]];\\n          _bridgeVoterList[_i] = _v.bridgeVoter;\\n        }\\n\\n        _consensusWeight[_v.consensusAddr] = _v.weight;\\n        _governorWeight[_v.governor] = _v.weight;\\n        _bridgeVoterWeight[_v.bridgeVoter] = _v.weight;\\n        return;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Removes a trusted organization.\\n   *\\n   * Requirements:\\n   * - The consensus address is added.\\n   *\\n   */\\n  function _removeTrustedOrganization(address _addr) internal virtual {\\n    uint256 _weight = _consensusWeight[_addr];\\n    if (_weight == 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: consensus address \\\",\\n            Strings.toHexString(uint160(_addr), 20),\\n            \\\" is not added\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    uint256 _index;\\n    uint256 _count = _consensusList.length;\\n    for (uint256 _i = 0; _i < _count; _i++) {\\n      if (_consensusList[_i] == _addr) {\\n        _index = _i;\\n        break;\\n      }\\n    }\\n\\n    _totalWeight -= _weight;\\n\\n    delete _addedBlock[_addr];\\n    delete _consensusWeight[_addr];\\n    _consensusList[_index] = _consensusList[_count - 1];\\n    _consensusList.pop();\\n\\n    delete _governorWeight[_governorList[_index]];\\n    _governorList[_index] = _governorList[_count - 1];\\n    _governorList.pop();\\n\\n    delete _bridgeVoterWeight[_bridgeVoterList[_index]];\\n    _bridgeVoterList[_index] = _bridgeVoterList[_count - 1];\\n    _bridgeVoterList.pop();\\n  }\\n\\n  /**\\n   * @dev Sets threshold and returns the old one.\\n   *\\n   * Emits the `ThresholdUpdated` event.\\n   *\\n   */\\n  function _setThreshold(uint256 _numerator, uint256 _denominator)\\n    internal\\n    virtual\\n    returns (uint256 _previousNum, uint256 _previousDenom)\\n  {\\n    require(_numerator <= _denominator, \\\"RoninTrustedOrganization: invalid threshold\\\");\\n    _previousNum = _num;\\n    _previousDenom = _denom;\\n    _num = _numerator;\\n    _denom = _denominator;\\n    emit ThresholdUpdated(_nonce++, _numerator, _denominator, _previousNum, _previousDenom);\\n  }\\n\\n  /**\\n   * @dev Hook that checks trusted organization's data. Reverts if the requirements are not met.\\n   *\\n   * Requirements:\\n   * - The weight must be larger than 0.\\n   * - The consensus address, governor address, and bridge voter address are different.\\n   */\\n  function _sanityCheckTrustedOrganizationData(TrustedOrganization memory _v) private pure {\\n    require(_v.weight > 0, \\\"RoninTrustedOrganization: invalid weight\\\");\\n\\n    address[] memory _addresses = new address[](3);\\n    _addresses[0] = _v.consensusAddr;\\n    _addresses[1] = _v.governor;\\n    _addresses[2] = _v.bridgeVoter;\\n    require(!AddressArrayUtils.hasDuplicate(_addresses), \\\"RoninTrustedOrganization: three addresses must be distinct\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xcdc122c399d55a5c7ff9bb96a2e7c99c99b3814edcd1a4e24c6e021bacd15c32\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101125760003560e01c80630ed285df14610117578063150740051461012c57806341feed1c1461014a578063520fce621461018157806356241911146101a15780635f14a1c3146101ca57806370823625146101dd5780637c37103c146101f05780637de5dedd14610203578063926323d51461020b578063a85c7d6e14610213578063b505a07c14610226578063b9c3620914610239578063cacf8fb514610261578063cc7e6b3b14610269578063d78392f81461027c578063d9d5dadb146102a5578063dafae408146102b8578063db6693a2146102db578063e75235b8146102fb578063e8c0685e14610306578063f09267c214610319575b600080fd5b61012a610125366004611ddc565b61032c565b005b61013461037b565b6040516101419190611e5a565b60405180910390f35b610173610158366004611ec4565b6001600160a01b031660009081526005602052604090205490565b604051908152602001610141565b61019461018f366004611edf565b610550565b6040516101419190611f53565b6101736101af366004611ec4565b6001600160a01b031660009081526007602052604090205490565b6101736101d8366004611edf565b610624565b6101946101eb366004611edf565b610693565b61012a6101fe366004611f8b565b610760565b610173610889565b600354610173565b61012a610221366004611edf565b6108c6565b61012a610234366004611ddc565b6109a5565b61024c610247366004611fdb565b610a79565b60408051928352602083019190915201610141565b600954610173565b610194610277366004611edf565b610aca565b61017361028a366004611ec4565b6001600160a01b031660009081526006602052604090205490565b6101736102b3366004611edf565b610b97565b6102cb6102c6366004611ffd565b610c06565b6040519015158152602001610141565b6102ee6102e9366004611ec4565b610c2d565b6040516101419190612016565b60015460025461024c565b610173610314366004611edf565b610d03565b6102ee610327366004611ffd565b610d72565b610334610e55565b6001600160a01b0316336001600160a01b03161461036d5760405162461bcd60e51b815260040161036490612024565b60405180910390fd5b6103778282610e83565b5050565b6009546060906001600160401b0381111561039857610398612066565b6040519080825280602002602001820160405280156103d157816020015b6103be611d6a565b8152602001906001900390816103b65790505b5090506000805b825181101561054b57600981815481106103f4576103f461207c565b9060005260206000200160009054906101000a90046001600160a01b03169150818382815181106104275761042761207c565b60209081029190910101516001600160a01b039091169052600a8054829081106104535761045361207c565b9060005260206000200160009054906101000a90046001600160a01b03168382815181106104835761048361207c565b6020026020010151602001906001600160a01b031690816001600160a01b031681525050600b81815481106104ba576104ba61207c565b9060005260206000200160009054906101000a90046001600160a01b03168382815181106104ea576104ea61207c565b6020908102919091018101516001600160a01b03928316604091820152918416600090815260059091522054835184908390811061052a5761052a61207c565b60209081029190910101516060015280610543816120a8565b9150506103d8565b505090565b6060816001600160401b0381111561056a5761056a612066565b604051908082528060200260200182016040528015610593578160200160208202803683370190505b50905060005b815181101561061d57600560008585848181106105b8576105b861207c565b90506020020160208101906105cd9190611ec4565b6001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106106005761060061207c565b602090810291909101015280610615816120a8565b915050610599565b5092915050565b6000805b8281101561061d57600660008585848181106106465761064661207c565b905060200201602081019061065b9190611ec4565b6001600160a01b0316815260208101919091526040016000205461067f90836120c1565b91508061068b816120a8565b915050610628565b6060816001600160401b038111156106ad576106ad612066565b6040519080825280602002602001820160405280156106d6578160200160208202803683370190505b50905060005b815181101561061d57600760008585848181106106fb576106fb61207c565b90506020020160208101906107109190611ec4565b6001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106107435761074361207c565b602090810291909101015280610758816120a8565b9150506106dc565b600054610100900460ff16158080156107805750600054600160ff909116105b8061079a5750303b15801561079a575060005460ff166001145b6107fd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610364565b6000805460ff191660011790558015610820576000805461ff0019166101001790555b8315610830576108308585610e83565b61083a8383610f02565b50508015610882576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b600060025460016002546003546001546108a391906120d4565b6108ad91906120c1565b6108b791906120eb565b6108c191906120fe565b905090565b6108ce610e55565b6001600160a01b0316336001600160a01b0316146108fe5760405162461bcd60e51b815260040161036490612024565b8061091b5760405162461bcd60e51b815260040161036490612120565b60005b818110156109675761095583838381811061093b5761093b61207c565b90506020020160208101906109509190611ec4565b610fc3565b8061095f816120a8565b91505061091e565b507f121945697ac30ee0fc67821492cb685c65f0ea4d7f1b710fde44d6e2237f43a7828260405161099992919061215c565b60405180910390a15050565b6109ad610e55565b6001600160a01b0316336001600160a01b0316146109dd5760405162461bcd60e51b815260040161036490612024565b806109fa5760405162461bcd60e51b815260040161036490612120565b60005b81811015610a4757610a35838383818110610a1a57610a1a61207c565b905060a00201803603810190610a3091906121a8565b611355565b80610a3f816120a8565b9150506109fd565b507fe887c8106c09d1770c0ef0bf8ca62c54766f18b07506801865501783376cbeda8282604051610999929190612238565b600080610a84610e55565b6001600160a01b0316336001600160a01b031614610ab45760405162461bcd60e51b815260040161036490612024565b610abe8484610f02565b915091505b9250929050565b6060816001600160401b03811115610ae457610ae4612066565b604051908082528060200260200182016040528015610b0d578160200160208202803683370190505b50905060005b815181101561061d5760066000858584818110610b3257610b3261207c565b9050602002016020810190610b479190611ec4565b6001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610b7a57610b7a61207c565b602090810291909101015280610b8f816120a8565b915050610b13565b6000805b8281101561061d5760076000858584818110610bb957610bb961207c565b9050602002016020810190610bce9190611ec4565b6001600160a01b03168152602081019190915260400160002054610bf290836120c1565b915080610bfe816120a8565b915050610b9b565b6000600354600154610c1891906120d4565b600254610c2590846120d4565b101592915050565b610c35611d6a565b60005b600954811015610c9b57826001600160a01b031660098281548110610c5f57610c5f61207c565b6000918252602090912001546001600160a01b031603610c8957610c8281610d72565b9392505050565b80610c93816120a8565b915050610c38565b5060405162461bcd60e51b8152602060048201526042602482015260008051602061250983398151915260448201527f666f72206e6f6e2d6578697374656e7420636f6e73656e737573206164647265606482015261737360f01b608482015260a401610364565b6000805b8281101561061d5760056000858584818110610d2557610d2561207c565b9050602002016020810190610d3a9190611ec4565b6001600160a01b03168152602081019190915260400160002054610d5e90836120c1565b915080610d6a816120a8565b915050610d07565b610d7a611d6a565b600060098381548110610d8f57610d8f61207c565b9060005260206000200160009054906101000a90046001600160a01b031690506040518060a00160405280826001600160a01b03168152602001600a8581548110610ddc57610ddc61207c565b600091825260209182902001546001600160a01b03168252600b8054929091019186908110610e0d57610e0d61207c565b60009182526020808320909101546001600160a01b03908116845294909416808252600585526040808320548487015290825260089094528390205492019190915292915050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b031690565b60005b81811015610ed057610ebe838383818110610ea357610ea361207c565b905060a00201803603810190610eb991906121a8565b6116f3565b80610ec8816120a8565b915050610e86565b507fc753dbf7952c70ff6b9fa7b626403aa1d2230d97136b635bd5e85bec72bcca6c8282604051610999929190612238565b60008082841115610f575760405162461bcd60e51b815260206004820152602b60248201526000805160206124e983398151915260448201526a19081d1a1c995cda1bdb1960aa1b6064820152608401610364565b50506001805460028054928590558390556004805491929184918691906000610f7f836120a8565b9091555060408051868152602081018690527f976f8a9c5bdf8248dec172376d6e2b80a8e3df2f0328e381c6db8e1cf138c0f8910160405180910390a49250929050565b6001600160a01b0381166000908152600560205260408120549081900361102e57610ff8826001600160a01b03166014611968565b6040516020016110089190612323565b60408051601f198184030181529082905262461bcd60e51b82526103649160040161235e565b600954600090815b8181101561108f57846001600160a01b03166009828154811061105b5761105b61207c565b6000918252602090912001546001600160a01b03160361107d5780925061108f565b80611087816120a8565b915050611036565b5082600360008282546110a291906120eb565b90915550506001600160a01b0384166000908152600860209081526040808320839055600590915281205560096110da6001836120eb565b815481106110ea576110ea61207c565b600091825260209091200154600980546001600160a01b0390921691849081106111165761111661207c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600980548061115557611155612391565b6001900381819060005260206000200160006101000a8154906001600160a01b030219169055905560066000600a84815481106111945761119461207c565b60009182526020808320909101546001600160a01b03168352820192909252604001812055600a6111c66001836120eb565b815481106111d6576111d661207c565b600091825260209091200154600a80546001600160a01b0390921691849081106112025761120261207c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600a80548061124157611241612391565b6001900381819060005260206000200160006101000a8154906001600160a01b030219169055905560076000600b84815481106112805761128061207c565b60009182526020808320909101546001600160a01b03168352820192909252604001812055600b6112b26001836120eb565b815481106112c2576112c261207c565b600091825260209091200154600b80546001600160a01b0390921691849081106112ee576112ee61207c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600b80548061132d5761132d612391565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b61135e81611b0c565b80516001600160a01b031660009081526005602052604081205490819003611396578151610ff8906001600160a01b03166014611968565b60095460005b818110156116ed5783600001516001600160a01b0316600982815481106113c5576113c561207c565b6000918252602090912001546001600160a01b0316036116db5782600360008282546113f191906120eb565b909155505060608401516003805460009061140d9084906120c1565b9250508190555083602001516001600160a01b0316600a82815481106114355761143561207c565b6000918252602090912001546001600160a01b03161461154d576020808501516001600160a01b0316600090815260069091526040902054156114c85760405162461bcd60e51b815260206004820152603760248201526000805160206125098339815191526044820152763337b910323ab83634b1b0ba32b21033b7bb32b93737b960491b6064820152608401610364565b60066000600a83815481106114df576114df61207c565b60009182526020808320909101546001600160a01b03168352828101939093526040909101812055840151600a80548390811061151e5761151e61207c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b83604001516001600160a01b0316600b828154811061156e5761156e61207c565b6000918252602090912001546001600160a01b031614611689576040808501516001600160a01b0316600090815260076020522054156116025760405162461bcd60e51b815260206004820152603b602482015260008051602061250983398151915260448201527a3337b910323ab83634b1b0ba32b210313934b233b2903b37ba32b960291b6064820152608401610364565b60076000600b83815481106116195761161961207c565b60009182526020808320909101546001600160a01b031683528201929092526040908101822091909155840151600b80548390811061165a5761165a61207c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b50505060608101805182516001600160a01b0390811660009081526005602090815260408083209490945584518187015184168352600682528483205593519483015190911681526007909252902055565b806116e5816120a8565b91505061139c565b50505050565b6080810151156117455760405162461bcd60e51b815260206004820152602960248201526000805160206124e983398151915260448201526819081c995c5d595cdd60ba1b6064820152608401610364565b61174e81611b0c565b80516001600160a01b031660009081526005602052604090205415611793578051611783906001600160a01b03166014611968565b60405160200161100891906123a7565b6020808201516001600160a01b0316600090815260069091526040902054156117de576117ce81602001516001600160a01b03166014611968565b60405160200161100891906123e6565b6040808201516001600160a01b0316600090815260076020522054156118265761181681604001516001600160a01b03166014611968565b6040516020016110089190612459565b8051600980546001808201835560009283527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910180546001600160a01b03199081166001600160a01b0395861617909155606085018051865186168552600560209081526040808720929092558088018051600a805480890182559089527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180548716918a16919091179055835190518816875260068252828720558188018051600b8054978801815588527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db99096018054909516958816959095179093558151935186168552600783528085209390935585519094168352600890528120439055905160038054919290916119609084906120c1565b909155505050565b606060006119778360026120d4565b6119829060026120c1565b6001600160401b0381111561199957611999612066565b6040519080825280601f01601f1916602001820160405280156119c3576020820181803683370190505b509050600360fc1b816000815181106119de576119de61207c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a0d57611a0d61207c565b60200101906001600160f81b031916908160001a9053506000611a318460026120d4565b611a3c9060016120c1565b90505b6001811115611ab4576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a7057611a7061207c565b1a60f81b828281518110611a8657611a8661207c565b60200101906001600160f81b031916908160001a90535060049490941c93611aad816124d1565b9050611a3f565b508315611b035760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610364565b90505b92915050565b6000816060015111611b5f5760405162461bcd60e51b815260206004820152602860248201526000805160206124e983398151915260448201526719081dd95a59da1d60c21b6064820152608401610364565b6040805160038082526080820190925260009160208201606080368337019050509050816000015181600081518110611b9a57611b9a61207c565b60200260200101906001600160a01b031690816001600160a01b031681525050816020015181600181518110611bd257611bd261207c565b60200260200101906001600160a01b031690816001600160a01b031681525050816040015181600281518110611c0a57611c0a61207c565b60200260200101906001600160a01b031690816001600160a01b031681525050611c3381611ca3565b156103775760405162461bcd60e51b815260206004820152603a60248201527f526f6e696e547275737465644f7267616e697a6174696f6e3a207468726565206044820152791859191c995cdcd95cc81b5d5cdd08189948191a5cdd1a5b98dd60321b6064820152608401610364565b60008151600003611cb657506000919050565b60005b60018351611cc791906120eb565b811015611d61576000611cdb8260016120c1565b90505b8351811015611d4e57838181518110611cf957611cf961207c565b60200260200101516001600160a01b0316848381518110611d1c57611d1c61207c565b60200260200101516001600160a01b031603611d3c575060019392505050565b80611d46816120a8565b915050611cde565b5080611d59816120a8565b915050611cb9565b50600092915050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60008083601f840112611daa57600080fd5b5081356001600160401b03811115611dc157600080fd5b60208301915083602060a083028501011115610ac357600080fd5b60008060208385031215611def57600080fd5b82356001600160401b03811115611e0557600080fd5b611e1185828601611d98565b90969095509350505050565b80516001600160a01b0390811683526020808301518216908401526040808301519091169083015260608082015190830152608090810151910152565b6020808252825182820181905260009190848201906040850190845b81811015611e9c57611e89838551611e1d565b9284019260a09290920191600101611e76565b50909695505050505050565b80356001600160a01b0381168114611ebf57600080fd5b919050565b600060208284031215611ed657600080fd5b610c8282611ea8565b60008060208385031215611ef257600080fd5b82356001600160401b0380821115611f0957600080fd5b818501915085601f830112611f1d57600080fd5b813581811115611f2c57600080fd5b8660208260051b8501011115611f4157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015611e9c57835183529284019291840191600101611f6f565b60008060008060608587031215611fa157600080fd5b84356001600160401b03811115611fb757600080fd5b611fc387828801611d98565b90989097506020870135966040013595509350505050565b60008060408385031215611fee57600080fd5b50508035926020909101359150565b60006020828403121561200f57600080fd5b5035919050565b60a08101611b068284611e1d565b60208082526022908201527f48617350726f787941646d696e3a20756e617574686f72697a65642073656e6460408201526132b960f11b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016120ba576120ba612092565b5060010190565b80820180821115611b0657611b06612092565b8082028115828204841417611b0657611b06612092565b81810381811115611b0657611b06612092565b60008261211b57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201526000805160206124e983398151915260408201526d0c840c2e4e4c2f240d8cadccee8d60931b606082015260800190565b60208082528181018390526000908460408401835b8681101561219d576001600160a01b0361218a84611ea8565b1682529183019190830190600101612171565b509695505050505050565b600060a082840312156121ba57600080fd5b60405160a081016001600160401b03811182821017156121ea57634e487b7160e01b600052604160045260246000fd5b6040526121f683611ea8565b815261220460208401611ea8565b602082015261221560408401611ea8565b604082015260608301356060820152608083013560808201528091505092915050565b6020808252818101839052600090604080840186845b878110156122b4576001600160a01b038061226884611ea8565b16845280612277878501611ea8565b168685015280612288868501611ea8565b168486015250606082810135908401526080808301359084015260a0928301929091019060010161224e565b5090979650505050505050565b7f526f6e696e547275737465644f7267616e697a6174696f6e3a20636f6e73656e81526b039bab99030b2323932b9b9960a51b6020820152602c0190565b60005b8381101561231a578181015183820152602001612302565b50506000910152565b600061232e826122c1565b835161233e8183602088016122ff565b6c081a5cc81b9bdd081859191959609a1b9101908152600d019392505050565b602081526000825180602084015261237d8160408501602087016122ff565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603160045260246000fd5b60006123b2826122c1565b83516123c28183602088016122ff565b7020697320616464656420616c726561647960781b91019081526011019392505050565b7f526f6e696e547275737465644f7267616e697a6174696f6e3a20676f76656e6f8152690391030b2323932b9b9960b51b60208201526000825161243181602a8501602087016122ff565b7020697320616464656420616c726561647960781b602a939091019283015250603b01919050565b7f526f6e696e547275737465644f7267616e697a6174696f6e3a2062726964676581526e0103b37ba32b91030b2323932b9b99608d1b6020820152600082516124a981602f8501602087016122ff565b7020697320616464656420616c726561647960781b602f939091019283015250604001919050565b6000816124e0576124e0612092565b50600019019056fe526f6e696e547275737465644f7267616e697a6174696f6e3a20696e76616c69526f6e696e547275737465644f7267616e697a6174696f6e3a20717565727920a2646970667358221220171fedbb4d0e07d0f093c403c3df05c9996d7e7a3d24de0b489d3201b599112464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTrustedOrganizations((address,address,address,uint256,uint256)[])": {
        "details": "Adds a list of addresses into the trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. - The field `addedBlock` should be blank. Emits the event `TrustedOrganizationAdded` once an organization is added."
      },
      "checkThreshold(uint256)": {
        "details": "Checks whether the `_voteWeight` passes the threshold."
      },
      "countTrustedOrganizations()": {
        "details": "Returns the number of trusted organizations."
      },
      "getAllTrustedOrganizations()": {
        "details": "Returns all of the trusted organizations."
      },
      "getBridgeVoterWeight(address)": {
        "details": "Returns the weight of a bridge voter."
      },
      "getBridgeVoterWeights(address[])": {
        "details": "Returns the weights of a list of bridge voter addresses."
      },
      "getConsensusWeight(address)": {
        "details": "Returns the weight of a consensus."
      },
      "getConsensusWeights(address[])": {
        "details": "Returns the weights of a list of consensus addresses."
      },
      "getGovernorWeight(address)": {
        "details": "Returns the weight of a governor."
      },
      "getGovernorWeights(address[])": {
        "details": "Returns the weights of a list of governor addresses."
      },
      "getThreshold()": {
        "details": "Returns the threshold."
      },
      "getTrustedOrganization(address)": {
        "details": "Returns the trusted organization by consensus address. Reverts once the consensus address is non-existent."
      },
      "getTrustedOrganizationAt(uint256)": {
        "details": "Returns the trusted organization at `_index`."
      },
      "initialize((address,address,address,uint256,uint256)[],uint256,uint256)": {
        "details": "Initializes the contract storage."
      },
      "minimumVoteWeight()": {
        "details": "Returns the minimum vote weight to pass the threshold."
      },
      "removeTrustedOrganizations(address[])": {
        "details": "Removes a list of addresses from the trusted organization. Requirements: - The method caller is admin. Emits the event `TrustedOrganizationRemoved` once an organization is removed.",
        "params": {
          "_consensusAddrs": "The list of consensus addresses linked to corresponding trusted organization that to be removed."
        }
      },
      "setThreshold(uint256,uint256)": {
        "details": "Sets the threshold. Requirements: - The method caller is admin. Emits the `ThresholdUpdated` event."
      },
      "sumBridgeVoterWeights(address[])": {
        "details": "Returns total weights of the bridge voter list."
      },
      "sumConsensusWeights(address[])": {
        "details": "Returns total weights of the consensus list."
      },
      "sumGovernorWeights(address[])": {
        "details": "Returns total weights of the governor list."
      },
      "totalWeights()": {
        "details": "Returns total weights."
      },
      "updateTrustedOrganizations((address,address,address,uint256,uint256)[])": {
        "details": "Updates weights for a list of existent trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. Emits the `TrustedOrganizationUpdated` event."
      }
    },
    "stateVariables": {
      "_addedBlock": {
        "details": "Mapping from consensus address => added block"
      },
      "_bridgeVoterList": {
        "details": "Bridge voters array"
      },
      "_bridgeVoterWeight": {
        "details": "Mapping from bridge voter address => weight"
      },
      "_consensusList": {
        "details": "Consensus array"
      },
      "_consensusWeight": {
        "details": "Mapping from consensus address => weight"
      },
      "_governorList": {
        "details": "Governors array"
      },
      "_governorWeight": {
        "details": "Mapping from governor address => weight"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1373,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 1376,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 19292,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_num",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 19294,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_denom",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 19296,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_totalWeight",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 19298,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_nonce",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 19303,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_consensusWeight",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 19308,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_governorWeight",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 19313,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_bridgeVoterWeight",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 19318,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_addedBlock",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 19322,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_consensusList",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 19326,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_governorList",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 19330,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_bridgeVoterList",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}