{
  "address": "0x5B23a9D02d1a76E9610A3Ad7b2BBAbeE94a97D71",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousDenominator",
          "type": "uint256"
        }
      ],
      "name": "ThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "orgs",
          "type": "tuple[]"
        }
      ],
      "name": "TrustedOrganizationsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "orgs",
          "type": "address[]"
        }
      ],
      "name": "TrustedOrganizationsRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "orgs",
          "type": "tuple[]"
        }
      ],
      "name": "TrustedOrganizationsUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_list",
          "type": "tuple[]"
        }
      ],
      "name": "addTrustedOrganizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voteWeight",
          "type": "uint256"
        }
      ],
      "name": "checkThreshold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countTrustedOrganizations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTrustedOrganizations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_list",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getBridgeVoterWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "getBridgeVoterWeights",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_res",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_consensusAddr",
          "type": "address"
        }
      ],
      "name": "getConsensusWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "getConsensusWeights",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_res",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "getGovernorWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "getGovernorWeights",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_res",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_consensusAddr",
          "type": "address"
        }
      ],
      "name": "getTrustedOrganization",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "getTrustedOrganizationAt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_trustedOrgs",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "__num",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "__denom",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVoteWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "removeTrustedOrganizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_denominator",
          "type": "uint256"
        }
      ],
      "name": "setThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "sumBridgeVoterWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "sumConsensusWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_list",
          "type": "address[]"
        }
      ],
      "name": "sumGovernorWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_res",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "consensusAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "bridgeVoter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "addedBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRoninTrustedOrganization.TrustedOrganization[]",
          "name": "_list",
          "type": "tuple[]"
        }
      ],
      "name": "updateTrustedOrganizations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7e59800ea4e223cc1751be595722e26e64fce514c94dc6ba93aa2ebf75440e08",
  "receipt": {
    "to": null,
    "from": "0x968D0Cd7343f711216817E617d3f92a23dC91c07",
    "contractAddress": "0x5B23a9D02d1a76E9610A3Ad7b2BBAbeE94a97D71",
    "transactionIndex": 0,
    "gasUsed": "2155406",
    "logsBloom": "0x
    "blockHash": "0x0ed25c1bbe26f5c47ecfc66081667b5a8581581ab3578841a472b0ea0bfd7d12",
    "transactionHash": "0x7e59800ea4e223cc1751be595722e26e64fce514c94dc6ba93aa2ebf75440e08",
    "logs": [],
    "blockNumber": 12250712,
    "cumulativeGasUsed": "2155406",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "7ee7c0f941167beb3dcb34451beb8d74",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousDenominator\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"orgs\",\"type\":\"tuple[]\"}],\"name\":\"TrustedOrganizationsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"orgs\",\"type\":\"address[]\"}],\"name\":\"TrustedOrganizationsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"orgs\",\"type\":\"tuple[]\"}],\"name\":\"TrustedOrganizationsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_list\",\"type\":\"tuple[]\"}],\"name\":\"addTrustedOrganizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_voteWeight\",\"type\":\"uint256\"}],\"name\":\"checkThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countTrustedOrganizations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTrustedOrganizations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getBridgeVoterWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"getBridgeVoterWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"getConsensusWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"getConsensusWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"getGovernorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"getGovernorWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_res\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_consensusAddr\",\"type\":\"address\"}],\"name\":\"getTrustedOrganization\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"getTrustedOrganizationAt\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_trustedOrgs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"__num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__denom\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVoteWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"removeTrustedOrganizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"sumBridgeVoterWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"sumConsensusWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_list\",\"type\":\"address[]\"}],\"name\":\"sumGovernorWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_res\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"consensusAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeVoter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct IRoninTrustedOrganization.TrustedOrganization[]\",\"name\":\"_list\",\"type\":\"tuple[]\"}],\"name\":\"updateTrustedOrganizations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedOrganizations((address,address,address,uint256,uint256)[])\":{\"details\":\"Adds a list of addresses into the trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. - The field `addedBlock` should be blank. Emits the event `TrustedOrganizationAdded` once an organization is added.\"},\"checkThreshold(uint256)\":{\"details\":\"Checks whether the `_voteWeight` passes the threshold.\"},\"countTrustedOrganizations()\":{\"details\":\"Returns the number of trusted organizations.\"},\"getAllTrustedOrganizations()\":{\"details\":\"Returns all of the trusted organizations.\"},\"getBridgeVoterWeight(address)\":{\"details\":\"Returns the weight of a bridge voter.\"},\"getBridgeVoterWeights(address[])\":{\"details\":\"Returns the weights of a list of bridge voter addresses.\"},\"getConsensusWeight(address)\":{\"details\":\"Returns the weight of a consensus.\"},\"getConsensusWeights(address[])\":{\"details\":\"Returns the weights of a list of consensus addresses.\"},\"getGovernorWeight(address)\":{\"details\":\"Returns the weight of a governor.\"},\"getGovernorWeights(address[])\":{\"details\":\"Returns the weights of a list of governor addresses.\"},\"getThreshold()\":{\"details\":\"Returns the threshold.\"},\"getTrustedOrganization(address)\":{\"details\":\"Returns the trusted organization by consensus address. Reverts once the consensus address is non-existent.\"},\"getTrustedOrganizationAt(uint256)\":{\"details\":\"Returns the trusted organization at `_index`.\"},\"initialize((address,address,address,uint256,uint256)[],uint256,uint256)\":{\"details\":\"Initializes the contract storage.\"},\"minimumVoteWeight()\":{\"details\":\"Returns the minimum vote weight to pass the threshold.\"},\"removeTrustedOrganizations(address[])\":{\"details\":\"Removes a list of addresses from the trusted organization. Requirements: - The method caller is admin. Emits the event `TrustedOrganizationRemoved` once an organization is removed.\",\"params\":{\"_consensusAddrs\":\"The list of consensus addresses linked to corresponding trusted organization that to be removed.\"}},\"setThreshold(uint256,uint256)\":{\"details\":\"Sets the threshold. Requirements: - The method caller is admin. Emits the `ThresholdUpdated` event.\"},\"sumBridgeVoterWeights(address[])\":{\"details\":\"Returns total weights of the bridge voter list.\"},\"sumConsensusWeights(address[])\":{\"details\":\"Returns total weights of the consensus list.\"},\"sumGovernorWeights(address[])\":{\"details\":\"Returns total weights of the governor list.\"},\"totalWeights()\":{\"details\":\"Returns total weights.\"},\"updateTrustedOrganizations((address,address,address,uint256,uint256)[])\":{\"details\":\"Updates weights for a list of existent trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. Emits the `TrustedOrganizationUpdated` event.\"}},\"stateVariables\":{\"_addedBlock\":{\"details\":\"Mapping from consensus address => added block\"},\"_bridgeVoterList\":{\"details\":\"Bridge voters array\"},\"_bridgeVoterWeight\":{\"details\":\"Mapping from bridge voter address => weight\"},\"_consensusList\":{\"details\":\"Consensus array\"},\"_consensusWeight\":{\"details\":\"Mapping from consensus address => weight\"},\"_governorList\":{\"details\":\"Governors array\"},\"_governorWeight\":{\"details\":\"Mapping from governor address => weight\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/multi-chains/RoninTrustedOrganization.sol\":\"RoninTrustedOrganization\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/extensions/collections/HasProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\nabstract contract HasProxyAdmin {\\n  // bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n  bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n  modifier onlyAdmin() {\\n    require(msg.sender == _getAdmin(), \\\"HasProxyAdmin: unauthorized sender\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @dev Returns proxy admin.\\n   */\\n  function _getAdmin() internal view returns (address) {\\n    return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n  }\\n}\\n\",\"keccak256\":\"0x0c2fcf25290180e8cd733691b113464cdde671dc019e6c343e9eb3e16c6ca24a\",\"license\":\"MIT\"},\"contracts/interfaces/IQuorum.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IQuorum {\\n  /// @dev Emitted when the threshold is updated\\n  event ThresholdUpdated(\\n    uint256 indexed nonce,\\n    uint256 indexed numerator,\\n    uint256 indexed denominator,\\n    uint256 previousNumerator,\\n    uint256 previousDenominator\\n  );\\n\\n  /**\\n   * @dev Returns the threshold.\\n   */\\n  function getThreshold() external view returns (uint256 _num, uint256 _denom);\\n\\n  /**\\n   * @dev Checks whether the `_voteWeight` passes the threshold.\\n   */\\n  function checkThreshold(uint256 _voteWeight) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the minimum vote weight to pass the threshold.\\n   */\\n  function minimumVoteWeight() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the threshold.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits the `ThresholdUpdated` event.\\n   *\\n   */\\n  function setThreshold(uint256 _numerator, uint256 _denominator)\\n    external\\n    returns (uint256 _previousNum, uint256 _previousDenom);\\n}\\n\",\"keccak256\":\"0x10f3b360430e6d03773c9959f54cbed6fb0346069645c05b05ef50cfb19f3753\",\"license\":\"MIT\"},\"contracts/interfaces/IRoninTrustedOrganization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./IQuorum.sol\\\";\\n\\ninterface IRoninTrustedOrganization is IQuorum {\\n  struct TrustedOrganization {\\n    // Address of the validator that produces block, e.g. block.coinbase. This is so-called validator address.\\n    address consensusAddr;\\n    // Address to voting proposal\\n    address governor;\\n    // Address to voting bridge operators\\n    address bridgeVoter;\\n    // Its Weight\\n    uint256 weight;\\n    // The block that the organization was added\\n    uint256 addedBlock;\\n  }\\n\\n  /// @dev Emitted when the trusted organization is added.\\n  event TrustedOrganizationsAdded(TrustedOrganization[] orgs);\\n  /// @dev Emitted when the trusted organization is updated.\\n  event TrustedOrganizationsUpdated(TrustedOrganization[] orgs);\\n  /// @dev Emitted when the trusted organization is removed.\\n  event TrustedOrganizationsRemoved(address[] orgs);\\n\\n  /**\\n   * @dev Adds a list of addresses into the trusted organization.\\n   *\\n   * Requirements:\\n   * - The weights should larger than 0.\\n   * - The method caller is admin.\\n   * - The field `addedBlock` should be blank.\\n   *\\n   * Emits the event `TrustedOrganizationAdded` once an organization is added.\\n   *\\n   */\\n  function addTrustedOrganizations(TrustedOrganization[] calldata) external;\\n\\n  /**\\n   * @dev Updates weights for a list of existent trusted organization.\\n   *\\n   * Requirements:\\n   * - The weights should larger than 0.\\n   * - The method caller is admin.\\n   *\\n   * Emits the `TrustedOrganizationUpdated` event.\\n   *\\n   */\\n  function updateTrustedOrganizations(TrustedOrganization[] calldata _list) external;\\n\\n  /**\\n   * @dev Removes a list of addresses from the trusted organization.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits the event `TrustedOrganizationRemoved` once an organization is removed.\\n   *\\n   * @param _consensusAddrs The list of consensus addresses linked to corresponding trusted organization that to be removed.\\n   */\\n  function removeTrustedOrganizations(address[] calldata _consensusAddrs) external;\\n\\n  /**\\n   * @dev Returns total weights.\\n   */\\n  function totalWeights() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weight of a consensus.\\n   */\\n  function getConsensusWeight(address _consensusAddr) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weight of a governor.\\n   */\\n  function getGovernorWeight(address _governor) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weight of a bridge voter.\\n   */\\n  function getBridgeVoterWeight(address _addr) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the weights of a list of consensus addresses.\\n   */\\n  function getConsensusWeights(address[] calldata _list) external view returns (uint256[] memory);\\n\\n  /**\\n   * @dev Returns the weights of a list of governor addresses.\\n   */\\n  function getGovernorWeights(address[] calldata _list) external view returns (uint256[] memory);\\n\\n  /**\\n   * @dev Returns the weights of a list of bridge voter addresses.\\n   */\\n  function getBridgeVoterWeights(address[] calldata _list) external view returns (uint256[] memory);\\n\\n  /**\\n   * @dev Returns total weights of the consensus list.\\n   */\\n  function sumConsensusWeights(address[] calldata _list) external view returns (uint256 _res);\\n\\n  /**\\n   * @dev Returns total weights of the governor list.\\n   */\\n  function sumGovernorWeights(address[] calldata _list) external view returns (uint256 _res);\\n\\n  /**\\n   * @dev Returns total weights of the bridge voter list.\\n   */\\n  function sumBridgeVoterWeights(address[] calldata _list) external view returns (uint256 _res);\\n\\n  /**\\n   * @dev Returns the trusted organization at `_index`.\\n   */\\n  function getTrustedOrganizationAt(uint256 _index) external view returns (TrustedOrganization memory);\\n\\n  /**\\n   * @dev Returns the number of trusted organizations.\\n   */\\n  function countTrustedOrganizations() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns all of the trusted organizations.\\n   */\\n  function getAllTrustedOrganizations() external view returns (TrustedOrganization[] memory);\\n\\n  /**\\n   * @dev Returns the trusted organization by consensus address.\\n   *\\n   * Reverts once the consensus address is non-existent.\\n   */\\n  function getTrustedOrganization(address _consensusAddr) external view returns (TrustedOrganization memory);\\n}\\n\",\"keccak256\":\"0x1edb7a3f5d340e7efc141cb8d94c5499954dec869f026d3998ad92cbc714d604\",\"license\":\"MIT\"},\"contracts/libraries/AddressArrayUtils.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.0;\\n\\nlibrary AddressArrayUtils {\\n  /**\\n   * Returns whether or not there's a duplicate. Runs in O(n^2).\\n   * @param A Array to search\\n   * @return Returns true if duplicate, false otherwise\\n   */\\n  function hasDuplicate(address[] memory A) internal pure returns (bool) {\\n    if (A.length == 0) {\\n      return false;\\n    }\\n    for (uint256 i = 0; i < A.length - 1; i++) {\\n      for (uint256 j = i + 1; j < A.length; j++) {\\n        if (A[i] == A[j]) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0xc64f39980a5f980a3a87b3e4c692e0dd4848950a568cb5a24c39c6f99080c864\",\"license\":\"UNLICENSED\"},\"contracts/multi-chains/RoninTrustedOrganization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"../libraries/AddressArrayUtils.sol\\\";\\nimport \\\"../interfaces/IRoninTrustedOrganization.sol\\\";\\nimport \\\"../extensions/collections/HasProxyAdmin.sol\\\";\\n\\ncontract RoninTrustedOrganization is IRoninTrustedOrganization, HasProxyAdmin, Initializable {\\n  uint256 internal _num;\\n  uint256 internal _denom;\\n  uint256 internal _totalWeight;\\n  uint256 internal _nonce;\\n\\n  /// @dev Mapping from consensus address => weight\\n  mapping(address => uint256) internal _consensusWeight;\\n  /// @dev Mapping from governor address => weight\\n  mapping(address => uint256) internal _governorWeight;\\n  /// @dev Mapping from bridge voter address => weight\\n  mapping(address => uint256) internal _bridgeVoterWeight;\\n\\n  /// @dev Mapping from consensus address => added block\\n  mapping(address => uint256) internal _addedBlock;\\n\\n  /// @dev Consensus array\\n  address[] internal _consensusList;\\n  /// @dev Governors array\\n  address[] internal _governorList;\\n  /// @dev Bridge voters array\\n  address[] internal _bridgeVoterList;\\n\\n  /**\\n   * @dev Initializes the contract storage.\\n   */\\n  function initialize(\\n    TrustedOrganization[] calldata _trustedOrgs,\\n    uint256 __num,\\n    uint256 __denom\\n  ) external initializer {\\n    if (_trustedOrgs.length > 0) {\\n      _addTrustedOrganizations(_trustedOrgs);\\n    }\\n    _setThreshold(__num, __denom);\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function getThreshold() external view virtual returns (uint256, uint256) {\\n    return (_num, _denom);\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function checkThreshold(uint256 _voteWeight) external view virtual returns (bool) {\\n    return _voteWeight * _denom >= _num * _totalWeight;\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function minimumVoteWeight() external view virtual returns (uint256) {\\n    return (_num * _totalWeight + _denom - 1) / _denom;\\n  }\\n\\n  /**\\n   * @inheritdoc IQuorum\\n   */\\n  function setThreshold(uint256 _numerator, uint256 _denominator)\\n    external\\n    override\\n    onlyAdmin\\n    returns (uint256, uint256)\\n  {\\n    return _setThreshold(_numerator, _denominator);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function addTrustedOrganizations(TrustedOrganization[] calldata _list) external override onlyAdmin {\\n    _addTrustedOrganizations(_list);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function updateTrustedOrganizations(TrustedOrganization[] calldata _list) external override onlyAdmin {\\n    require(_list.length > 0, \\\"RoninTrustedOrganization: invalid array length\\\");\\n    for (uint256 _i; _i < _list.length; _i++) {\\n      _updateTrustedOrganization(_list[_i]);\\n    }\\n    emit TrustedOrganizationsUpdated(_list);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function removeTrustedOrganizations(address[] calldata _list) external override onlyAdmin {\\n    require(_list.length > 0, \\\"RoninTrustedOrganization: invalid array length\\\");\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _removeTrustedOrganization(_list[_i]);\\n    }\\n    emit TrustedOrganizationsRemoved(_list);\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function totalWeights() external view virtual returns (uint256) {\\n    return _totalWeight;\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getConsensusWeight(address _consensusAddr) external view returns (uint256) {\\n    return _consensusWeight[_consensusAddr];\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getGovernorWeight(address _governor) external view returns (uint256) {\\n    return _governorWeight[_governor];\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getBridgeVoterWeight(address _addr) external view returns (uint256) {\\n    return _bridgeVoterWeight[_addr];\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getConsensusWeights(address[] calldata _list) external view returns (uint256[] memory _res) {\\n    _res = new uint256[](_list.length);\\n    for (uint _i = 0; _i < _res.length; _i++) {\\n      _res[_i] = _consensusWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getGovernorWeights(address[] calldata _list) external view returns (uint256[] memory _res) {\\n    _res = new uint256[](_list.length);\\n    for (uint _i = 0; _i < _res.length; _i++) {\\n      _res[_i] = _governorWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getBridgeVoterWeights(address[] calldata _list) external view returns (uint256[] memory _res) {\\n    _res = new uint256[](_list.length);\\n    for (uint _i = 0; _i < _res.length; _i++) {\\n      _res[_i] = _bridgeVoterWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function sumConsensusWeights(address[] calldata _list) external view returns (uint256 _res) {\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _res += _consensusWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function sumGovernorWeights(address[] calldata _list) external view returns (uint256 _res) {\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _res += _governorWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function sumBridgeVoterWeights(address[] calldata _list) external view returns (uint256 _res) {\\n    for (uint _i = 0; _i < _list.length; _i++) {\\n      _res += _bridgeVoterWeight[_list[_i]];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function countTrustedOrganizations() external view override returns (uint256) {\\n    return _consensusList.length;\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getAllTrustedOrganizations() external view override returns (TrustedOrganization[] memory _list) {\\n    _list = new TrustedOrganization[](_consensusList.length);\\n    address _addr;\\n    for (uint256 _i; _i < _list.length; _i++) {\\n      _addr = _consensusList[_i];\\n      _list[_i].consensusAddr = _addr;\\n      _list[_i].governor = _governorList[_i];\\n      _list[_i].bridgeVoter = _bridgeVoterList[_i];\\n      _list[_i].weight = _consensusWeight[_addr];\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getTrustedOrganization(address _consensusAddr) external view returns (TrustedOrganization memory) {\\n    for (uint _i = 0; _i < _consensusList.length; _i++) {\\n      if (_consensusList[_i] == _consensusAddr) {\\n        return getTrustedOrganizationAt(_i);\\n      }\\n    }\\n    revert(\\\"RoninTrustedOrganization: query for non-existent consensus address\\\");\\n  }\\n\\n  /**\\n   * @inheritdoc IRoninTrustedOrganization\\n   */\\n  function getTrustedOrganizationAt(uint256 _idx) public view override returns (TrustedOrganization memory) {\\n    address _addr = _consensusList[_idx];\\n    return\\n      TrustedOrganization(\\n        _addr,\\n        _governorList[_idx],\\n        _bridgeVoterList[_idx],\\n        _consensusWeight[_addr],\\n        _addedBlock[_addr]\\n      );\\n  }\\n\\n  /**\\n   * @dev Adds a list of trusted organizations.\\n   */\\n  function _addTrustedOrganizations(TrustedOrganization[] calldata _list) internal virtual {\\n    for (uint256 _i; _i < _list.length; _i++) {\\n      _addTrustedOrganization(_list[_i]);\\n    }\\n    emit TrustedOrganizationsAdded(_list);\\n  }\\n\\n  /**\\n   * @dev Adds a trusted organization.\\n   *\\n   * Requirements:\\n   * - The weight is larger than 0.\\n   * - The consensus address is not added.\\n   * - The govenor address is not added.\\n   * - The bridge voter address is not added.\\n   *\\n   */\\n  function _addTrustedOrganization(TrustedOrganization memory _v) internal virtual {\\n    require(_v.addedBlock == 0, \\\"RoninTrustedOrganization: invalid request\\\");\\n    require(_v.weight > 0, \\\"RoninTrustedOrganization: invalid weight\\\");\\n\\n    address[] memory _addresses = new address[](3);\\n    _addresses[0] = _v.consensusAddr;\\n    _addresses[1] = _v.governor;\\n    _addresses[2] = _v.bridgeVoter;\\n    require(!AddressArrayUtils.hasDuplicate(_addresses), \\\"RoninTrustedOrganization: three addresses must be distinct\\\");\\n\\n    if (_consensusWeight[_v.consensusAddr] > 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: consensus address \\\",\\n            Strings.toHexString(uint160(_v.consensusAddr), 20),\\n            \\\" is added already\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    if (_governorWeight[_v.governor] > 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: govenor address \\\",\\n            Strings.toHexString(uint160(_v.governor), 20),\\n            \\\" is added already\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    if (_bridgeVoterWeight[_v.bridgeVoter] > 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: bridge voter address \\\",\\n            Strings.toHexString(uint160(_v.bridgeVoter), 20),\\n            \\\" is added already\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    _consensusList.push(_v.consensusAddr);\\n    _consensusWeight[_v.consensusAddr] = _v.weight;\\n\\n    _governorList.push(_v.governor);\\n    _governorWeight[_v.governor] = _v.weight;\\n\\n    _bridgeVoterList.push(_v.bridgeVoter);\\n    _bridgeVoterWeight[_v.bridgeVoter] = _v.weight;\\n\\n    _addedBlock[_v.consensusAddr] = block.number;\\n\\n    _totalWeight += _v.weight;\\n  }\\n\\n  /**\\n   * @dev Updates a trusted organization.\\n   *\\n   * Requirements:\\n   * - The weight is larger than 0.\\n   * - The consensus address is already added.\\n   *\\n   */\\n  function _updateTrustedOrganization(TrustedOrganization memory _v) internal virtual {\\n    require(_v.weight > 0, \\\"RoninTrustedOrganization: invalid weight\\\");\\n\\n    uint256 _weight = _consensusWeight[_v.consensusAddr];\\n    if (_weight == 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: consensus address \\\",\\n            Strings.toHexString(uint160(_v.consensusAddr), 20),\\n            \\\" is not added\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    uint256 _count = _consensusList.length;\\n    for (uint256 _i = 0; _i < _count; _i++) {\\n      if (_consensusList[_i] == _v.consensusAddr) {\\n        _totalWeight -= _weight;\\n        _totalWeight += _v.weight;\\n\\n        if (_governorList[_i] != _v.governor) {\\n          require(_governorWeight[_v.governor] == 0, \\\"RoninTrustedOrganization: query for duplicated governor\\\");\\n          delete _governorWeight[_governorList[_i]];\\n          _governorList[_i] = _v.governor;\\n        }\\n\\n        if (_bridgeVoterList[_i] != _v.bridgeVoter) {\\n          require(\\n            _bridgeVoterWeight[_v.bridgeVoter] == 0,\\n            \\\"RoninTrustedOrganization: query for duplicated bridge voter\\\"\\n          );\\n          delete _bridgeVoterWeight[_bridgeVoterList[_i]];\\n          _bridgeVoterList[_i] = _v.governor;\\n        }\\n\\n        _consensusWeight[_v.consensusAddr] = _v.weight;\\n        _governorWeight[_v.governor] = _v.weight;\\n        _bridgeVoterWeight[_v.bridgeVoter] = _v.weight;\\n        return;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Removes a trusted organization.\\n   *\\n   * Requirements:\\n   * - The consensus address is added.\\n   *\\n   */\\n  function _removeTrustedOrganization(address _addr) internal virtual {\\n    uint256 _weight = _consensusWeight[_addr];\\n    if (_weight == 0) {\\n      revert(\\n        string(\\n          abi.encodePacked(\\n            \\\"RoninTrustedOrganization: consensus address \\\",\\n            Strings.toHexString(uint160(_addr), 20),\\n            \\\" is not added\\\"\\n          )\\n        )\\n      );\\n    }\\n\\n    uint256 _index;\\n    uint256 _count = _consensusList.length;\\n    for (uint256 _i = 0; _i < _count; _i++) {\\n      if (_consensusList[_i] == _addr) {\\n        _index = _i;\\n        break;\\n      }\\n    }\\n\\n    _totalWeight -= _weight;\\n\\n    delete _addedBlock[_addr];\\n    delete _consensusWeight[_addr];\\n    _consensusList[_index] = _consensusList[_count - 1];\\n    _consensusList.pop();\\n\\n    delete _governorWeight[_governorList[_index]];\\n    _governorList[_index] = _governorList[_count - 1];\\n    _governorList.pop();\\n\\n    delete _bridgeVoterWeight[_bridgeVoterList[_index]];\\n    _bridgeVoterList[_index] = _bridgeVoterList[_count - 1];\\n    _bridgeVoterList.pop();\\n  }\\n\\n  /**\\n   * @dev Sets threshold and returns the old one.\\n   *\\n   * Emits the `ThresholdUpdated` event.\\n   *\\n   */\\n  function _setThreshold(uint256 _numerator, uint256 _denominator)\\n    internal\\n    virtual\\n    returns (uint256 _previousNum, uint256 _previousDenom)\\n  {\\n    require(_numerator <= _denominator, \\\"RoninTrustedOrganization: invalid threshold\\\");\\n    _previousNum = _num;\\n    _previousDenom = _denom;\\n    _num = _numerator;\\n    _denom = _denominator;\\n    emit ThresholdUpdated(_nonce++, _numerator, _denominator, _previousNum, _previousDenom);\\n  }\\n}\\n\",\"keccak256\":\"0x3cb403262e9e6f46b184ec8e96f90cdaf86035b638e41050f8be1e73f01c13ba\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTrustedOrganizations((address,address,address,uint256,uint256)[])": {
        "details": "Adds a list of addresses into the trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. - The field `addedBlock` should be blank. Emits the event `TrustedOrganizationAdded` once an organization is added."
      },
      "checkThreshold(uint256)": {
        "details": "Checks whether the `_voteWeight` passes the threshold."
      },
      "countTrustedOrganizations()": {
        "details": "Returns the number of trusted organizations."
      },
      "getAllTrustedOrganizations()": {
        "details": "Returns all of the trusted organizations."
      },
      "getBridgeVoterWeight(address)": {
        "details": "Returns the weight of a bridge voter."
      },
      "getBridgeVoterWeights(address[])": {
        "details": "Returns the weights of a list of bridge voter addresses."
      },
      "getConsensusWeight(address)": {
        "details": "Returns the weight of a consensus."
      },
      "getConsensusWeights(address[])": {
        "details": "Returns the weights of a list of consensus addresses."
      },
      "getGovernorWeight(address)": {
        "details": "Returns the weight of a governor."
      },
      "getGovernorWeights(address[])": {
        "details": "Returns the weights of a list of governor addresses."
      },
      "getThreshold()": {
        "details": "Returns the threshold."
      },
      "getTrustedOrganization(address)": {
        "details": "Returns the trusted organization by consensus address. Reverts once the consensus address is non-existent."
      },
      "getTrustedOrganizationAt(uint256)": {
        "details": "Returns the trusted organization at `_index`."
      },
      "initialize((address,address,address,uint256,uint256)[],uint256,uint256)": {
        "details": "Initializes the contract storage."
      },
      "minimumVoteWeight()": {
        "details": "Returns the minimum vote weight to pass the threshold."
      },
      "removeTrustedOrganizations(address[])": {
        "details": "Removes a list of addresses from the trusted organization. Requirements: - The method caller is admin. Emits the event `TrustedOrganizationRemoved` once an organization is removed.",
        "params": {
          "_consensusAddrs": "The list of consensus addresses linked to corresponding trusted organization that to be removed."
        }
      },
      "setThreshold(uint256,uint256)": {
        "details": "Sets the threshold. Requirements: - The method caller is admin. Emits the `ThresholdUpdated` event."
      },
      "sumBridgeVoterWeights(address[])": {
        "details": "Returns total weights of the bridge voter list."
      },
      "sumConsensusWeights(address[])": {
        "details": "Returns total weights of the consensus list."
      },
      "sumGovernorWeights(address[])": {
        "details": "Returns total weights of the governor list."
      },
      "totalWeights()": {
        "details": "Returns total weights."
      },
      "updateTrustedOrganizations((address,address,address,uint256,uint256)[])": {
        "details": "Updates weights for a list of existent trusted organization. Requirements: - The weights should larger than 0. - The method caller is admin. Emits the `TrustedOrganizationUpdated` event."
      }
    },
    "stateVariables": {
      "_addedBlock": {
        "details": "Mapping from consensus address => added block"
      },
      "_bridgeVoterList": {
        "details": "Bridge voters array"
      },
      "_bridgeVoterWeight": {
        "details": "Mapping from bridge voter address => weight"
      },
      "_consensusList": {
        "details": "Consensus array"
      },
      "_consensusWeight": {
        "details": "Mapping from consensus address => weight"
      },
      "_governorList": {
        "details": "Governors array"
      },
      "_governorWeight": {
        "details": "Mapping from governor address => weight"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1373,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 1376,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 17189,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_num",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 17191,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_denom",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 17193,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_totalWeight",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 17195,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_nonce",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 17200,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_consensusWeight",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 17205,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_governorWeight",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 17210,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_bridgeVoterWeight",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 17215,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_addedBlock",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 17219,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_consensusList",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 17223,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_governorList",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 17227,
        "contract": "contracts/multi-chains/RoninTrustedOrganization.sol:RoninTrustedOrganization",
        "label": "_bridgeVoterList",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}